name: ScanDog Security Scanner

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
      scandog_semgrep_scan:
        runs-on: ubuntu-latest
        container:
          image: semgrep/semgrep
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: semgrep scan
            run: semgrep scan --config auto --json > semgrep.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: semgrep.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SAST
              scanner: Semgrep
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_trivy_scan:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Trivy vulnerability scanner
            uses: aquasecurity/trivy-action@master
            with:
              scan-type: 'fs'
              scan-ref: .
              format: 'json'
              output: 'trivy-results.json'
              scanners: 'misconfig'
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: trivy-results.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: IaC Scanner
              scanner: Trivy
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_gosec_scan:
        runs-on: ubuntu-latest
        env:
          GO111MODULE: on
        steps:
          - name: Checkout Source
            uses: actions/checkout@v3
    
          - name: Gosec Security Scanner
            uses: securego/gosec@master
            with:
              args: '-no-fail -fmt json -out gosec.json .'
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: gosec.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SAST
              scanner: Gosec
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_grype_sca:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
    
          - name: Run Grype
            uses: anchore/scan-action@v6
            with:
              path: .
              output-format: json
              output-file: grype-results.json
              fail-build: false
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: grype-results.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SCA
              scanner: grype
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_checkov_scan:
        permissions:
          contents: read # for actions/checkout to fetch code
          security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
          actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
    
          - name: Checkov GitHub Action
            uses: bridgecrewio/checkov-action@v12
            with:
              soft_fail: true
              output_format: json
              output_file_path: .
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: results_json.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: IaC Scanner
              scanner: checkov
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_depscan_sca:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
    
          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.x'
    
          - name: Install OWASP-depscan
            run: |
              pip install owasp-depscan
    
          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: 21
    
          - name: Install cdxgen
            run: npm install -g @cyclonedx/cdxgen
    
          - name: scan SBOM by OWASP depscan
            run: |
              cd $GITHUB_WORKSPACE
              export FETCH_LICENSE=true
              depscan -t go -i . --reports-dir .
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: sbom-go.vdr.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SCA
              scanner: depscan
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_tfsec_scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
    
          - name: Run tfsec
            uses: aquasecurity/tfsec-action@v1.0.0
            with:
              format: json
              out: tfsec-results.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: tfsec-results.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: IaC Scanner
              scanner: tfsec
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_opengrep_scan:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Install Opengrep
            run: |
              apt-get update && apt-get install -y curl jq
              latest_version=$(curl --silent "https://api.github.com/repos/opengrep/opengrep/releases/latest" | jq -r .tag_name)
              curl -L -o opengrep "https://github.com/opengrep/opengrep/releases/download/${latest_version}/opengrep_manylinux_x86"
              chmod +x opengrep
              mv opengrep /usr/local/bin/opengrep
    
          - name: Run Opengrep
            run: opengrep scan --config auto --json-output=opengrep.json .
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: opengrep.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SAST
              scanner: opengrep
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_osv_scanner_scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
    
          - name: Install osv-scanner
            run: |
              sudo apt-get update
              sudo apt-get install -y snapd
              sudo snap install osv-scanner
    
          - name: Run osv-scanner
            run: osv-scanner scan . --json osv-results.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: osv-results.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SCA
              scanner: osv-scanner
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_gitleaks_scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
            with:
              fetch-depth: 0
    
          - name: Install & Run Gitleaks
            run: |
              git clone https://github.com/gitleaks/gitleaks.git
              cd gitleaks
              make build
              cd $GITHUB_WORKSPACE
              gitleaks dir . -f json -r gitleaks.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: gitleaks.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: Secret Scanning
              scanner: gitleaks
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_cdxgen_scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
    
          - name: Install cdxgen
            run: npm install -g @cyclonedx/cdxgen
    
          - name: Generate SBOM
            run: cdxgen --input . --output sbom.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: sbom.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: SBOM
              scanner: cdxgen
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_trufflehog_scan:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
            with:
              fetch-depth: 0
    
          - name: Install TruffleHog
            run: |
              curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
    
          - name: Run TruffleHog
            run: |
              trufflehog filesystem --no-verification --no-update --no-entropy --json . > trufflehog.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: trufflehog.json
              workflow_id: "7e0dd1908ccc3eac214541afc17329c6"
              scan_type: Secret Scanning
              scanner: trufflehog
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  