name: ScanDog Security Scanner

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
      scandog_opengrep_scan:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          - name: Install Opengrep
            run: |
              apt-get update && apt-get install -y curl jq
              latest_version=$(curl --silent "https://api.github.com/repos/opengrep/opengrep/releases/latest" | jq -r .tag_name)
              curl -L -o opengrep "https://github.com/opengrep/opengrep/releases/download/${latest_version}/opengrep_manylinux_x86"
              chmod +x opengrep
              mv opengrep /usr/local/bin/opengrep
    
          - name: Run Opengrep
            run: opengrep scan --config auto --json-output=opengrep.json .
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: opengrep.json
              workflow_id: "622b4ff3c93d482c4276a44840331538"
              scan_type: SAST
              scanner: opengrep
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  
      scandog_trivy_scan:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
    
          # Container registry authentication (configured via ScanDog settings)
          - name: Authenticate to Google Cloud
            uses: google-github-actions/auth@v2
            with:
              credentials_json: '${{ secrets.GCP_KEY }}'
    
          - name: Login to Google Artifact Registry
            run: |
              gcloud auth configure-docker europe-west4-docker.pkg.dev
    
          - name: Pull latest image
            run: |
              docker pull europe-west4-docker.pkg.dev/shared-services-20250105/dev-shared-backend/dev:test
    
          - name: Trivy vulnerability scanner
            uses: aquasecurity/trivy-action@0.28.0
            with:
              image-ref: europe-west4-docker.pkg.dev/shared-services-20250105/dev-shared-backend/dev:test
              format: 'json'
              scanners: 'vuln'
              output: 'trivy-results.json'
    
          - name: Upload Trivy scan results
            uses: actions/upload-artifact@v4
            with:
  
              name: trivy-report
              path: trivy-results.json
    
          - name: Import results to ScanDog
            uses: scandogio/scandog-import@v1.1
            with:
              endpoint_type: "import"
              ci_run_id: ${{ github.run_id }}
              report_file: trivy-results.json
              workflow_id: 622b4ff3c93d482c4276a44840331538
              scan_type: Container Scanner
              scanner: Trivy
              scandog_token: ${{ secrets.SCANDOG_TOKEN }}
              scandog_url: ${{ secrets.SCANDOG_URL }}
  